// Code generated by goctl. DO NOT EDIT!
// Source: like.proto

package like

import (
	"context"

	"410proj/apps/like/rpc/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CancelLikeVideoReq  = rpc.CancelLikeVideoReq
	CancelLikeVideoResp = rpc.CancelLikeVideoResp
	IsLikeReq           = rpc.IsLikeReq
	IsLikeResp          = rpc.IsLikeResp
	LikeList            = rpc.LikeList
	LikeNumReq          = rpc.LikeNumReq
	LikeNumResp         = rpc.LikeNumResp
	LikeVideoReq        = rpc.LikeVideoReq
	LikeVideoResp       = rpc.LikeVideoResp
	User                = rpc.User

	Like interface {
		GetLikeList(ctx context.Context, in *User, opts ...grpc.CallOption) (*LikeList, error)
		GetLikeNum(ctx context.Context, in *LikeNumReq, opts ...grpc.CallOption) (*LikeNumResp, error)
		IsLike(ctx context.Context, in *IsLikeReq, opts ...grpc.CallOption) (*IsLikeResp, error)
		LikeVideo(ctx context.Context, in *LikeVideoReq, opts ...grpc.CallOption) (*LikeVideoResp, error)
		CancelLikeVideo(ctx context.Context, in *CancelLikeVideoReq, opts ...grpc.CallOption) (*CancelLikeVideoResp, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) GetLikeList(ctx context.Context, in *User, opts ...grpc.CallOption) (*LikeList, error) {
	client := rpc.NewLikeClient(m.cli.Conn())
	return client.GetLikeList(ctx, in, opts...)
}

func (m *defaultLike) GetLikeNum(ctx context.Context, in *LikeNumReq, opts ...grpc.CallOption) (*LikeNumResp, error) {
	client := rpc.NewLikeClient(m.cli.Conn())
	return client.GetLikeNum(ctx, in, opts...)
}

func (m *defaultLike) IsLike(ctx context.Context, in *IsLikeReq, opts ...grpc.CallOption) (*IsLikeResp, error) {
	client := rpc.NewLikeClient(m.cli.Conn())
	return client.IsLike(ctx, in, opts...)
}

func (m *defaultLike) LikeVideo(ctx context.Context, in *LikeVideoReq, opts ...grpc.CallOption) (*LikeVideoResp, error) {
	client := rpc.NewLikeClient(m.cli.Conn())
	return client.LikeVideo(ctx, in, opts...)
}

func (m *defaultLike) CancelLikeVideo(ctx context.Context, in *CancelLikeVideoReq, opts ...grpc.CallOption) (*CancelLikeVideoResp, error) {
	client := rpc.NewLikeClient(m.cli.Conn())
	return client.CancelLikeVideo(ctx, in, opts...)
}
