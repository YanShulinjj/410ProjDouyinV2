// Code generated by goctl. DO NOT EDIT.
package types

type UserResponse struct {
	StatusCode int32  `json:"status_code"` //0-成功，其它失败
	Msg        string `json:"status_msg,omitempty"`
}

type UserInfo struct {
	Id            uint64 `json:"id"`   //用户ID
	Username      string `json:"name"` //用户名
	IsFollow      bool   `json:"is_follow"`
	FollowCount   int64  `json:"follow_count"`
	FollowerCount int64  `json:"follower_count"`
}

type RegisterReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type RegisterResp struct {
	UserResponse
	UserId uint64 `json:"user_id"`
	Token  string `json:"token"`
}

type LoginReq struct {
	Username string `form:"username"`
	Password string `form:"password"`
}

type LoginResp struct {
	UserResponse
	UserId uint64 `json:"user_id"`
	Token  string `json:"token"`
}

type UserInfoReq struct {
	UserId uint64 `form:"user_id"`
	Token  string `form:"token"`
}

type UserInfoResp struct {
	UserResponse
	UserInfo UserInfo `json:"user"`
}

type CommentResponse struct {
	StatusCode int32  `json:"status_code"` //0-成功，其它失败
	Msg        string `json:"status_msg,omitempty"`
}

type CommentInfo struct {
	Id         uint64   `json:"id"`          //评论ID
	User       UserInfo `json:"user"`        //用户
	Content    string   `json:"content"`     //用户名
	CreateDate string   `json:"create_date"` //创建时间
}

type AddCommentReq struct {
	Token      string `form:"token"`
	VideoId    uint64 `form:"video_id"`
	ActionType int32  `form:"action_type"`
	Comment    string `form:"comment_text"`
	Comment_id uint64 `form:"comment_id, optional"`
}

type AddCommentResp struct {
	CommentResponse
	Comment CommentInfo `json:"comment"`
}

type DropCommentReq struct {
	Id uint64 `form:"comment_id"`
}

type DropCommentResp struct {
	CommentResponse
}

type VideoCommentListReq struct {
	Token   string `form:"token"`
	VideoId uint64 `form:"video_id"`
}

type VideoCommentListResp struct {
	CommentResponse
	Comments []*CommentInfo `json:"comment_list"`
}

type VideoResponse struct {
	StatusCode int32  `json:"status_code"` //0-成功，其它失败
	Msg        string `json:"status_msg,omitempty"`
}

type VideoItem struct {
	Id            uint64   `json:"id"`             //评论ID
	User          UserInfo `json:"author"`         //用户ID
	PlayURL       string   `json:"play_url"`       //视频ID
	CoverURL      string   `json:"cover_url"`      //用户名
	FavoriteCount string   `json:"favorite_count"` // 该视频点赞数量
	CommentCount  string   `json:"comment_count"`  // 该视频评论数量
	CreateTime    int64    `json:"create_time"`    //创建时间
	UpdateTime    int64    `json:"update_time"`    //更新时间
	IsLike        bool     `json:"is_favorite"`    // 是否点赞（针对当前登录用户）
}

type AddVideoReq struct {
	Token string `form:"token"`
	Title string `form:"title,omitempty"`
}

type AddVideoResp struct {
	VideoResponse
}

type DropVideoReq struct {
	Id uint64 `form:"video_id"`
}

type DropVideoResp struct {
	VideoResponse
}

type VideoFeedReq struct {
	Latest_time int64  `form:"latest_time,omitempty"`
	Token       string `form:"token,omitempty"`
}

type VideoFeedResp struct {
	VideoResponse
	Videos   []*VideoItem `json:"video_list,omitempty"`
	NextTime int64        `json:"next_time,omitempty"`
}

type VideoListReq struct {
	UserId uint64 `form:"user_id"`
	Token  string `form:"token"`
}

type PublishVideoListResp struct {
	VideoResponse
	Videos []*VideoItem `json:"video_list, omitempty"`
}

type LikeVideoListResp struct {
	VideoResponse
	Videos []*VideoItem `json:"video_list, omitempty"`
}

type LikeResponse struct {
	StatusCode int32  `json:"status_code"` //0-成功，其它失败
	Msg        string `json:"status_msg,omitempty"`
}

type ActionLikeReq struct {
	Token      string `form:"token"`
	VideoId    uint64 `form:"video_id"`
	ActionType uint8  `form:"action_type"` // 0-点赞，1-取消点赞
}

type ActionLikeResp struct {
	LikeResponse
}

type ActionRelationReq struct {
	ActionType uint8  `form:"action_type"` // 1-关注，2-取消关注
	Token      string `form:"token"`
	ToUserId   uint64 `form:"to_user_id"`
}

type ActionRelationResp struct {
	LikeResponse
}

type RelationResponse struct {
	StatusCode int32  `json:"status_code"` //0-成功，其它失败
	Msg        string `json:"status_msg,omitempty"`
}

type FollowListReq struct {
	UserId uint64 `form:"user_id"`
	Token  string `form:"token"`
}

type FollowListResp struct {
	RelationResponse
	Users []*UserInfo `json:"user_list"`
}

type FollowerListReq struct {
	UserId uint64 `form:"user_id"`
	Token  string `form:"token"`
}

type FollowerListResp struct {
	RelationResponse
	Users []*UserInfo `json:"user_list"`
}
